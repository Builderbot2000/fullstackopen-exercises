{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Documents\\\\fullstackopen\\\\fullstackopen-exercises\\\\part7\\\\blogapp-query\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef, useReducer } from \"react\";\nimport { useQuery, useQueryClient, useMutation } from \"react-query\";\nimport InfoContext from \"./InfoContext\";\nimport UserContext from \"./UserContext\";\nimport blogService from \"./services/blogs\";\nimport loginService from \"./services/login\";\nimport storageService from \"./services/storage\";\nimport Blog from \"./components/Blog\";\nimport LoginForm from \"./components/Login\";\nimport NewBlog from \"./components/NewBlog\";\nimport Notification from \"./components/Notification\";\nimport Togglable from \"./components/Togglable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst infoReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET\":\n      return action.payload;\n    case \"CLEAR\":\n      return {\n        message: null\n      };\n    default:\n      return state;\n  }\n};\nconst userReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\nconst App = () => {\n  _s();\n  const [user, userDispatch] = useReducer(userReducer, \"\");\n  const [info, infoDispatch] = useReducer(infoReducer, {\n    message: null\n  });\n  const queryClient = useQueryClient();\n  const blogFormRef = useRef();\n  useEffect(() => {\n    const user = storageService.loadUser();\n    userDispatch({\n      type: \"SET\",\n      payload: user\n    });\n  }, []);\n  const notifyWith = function (message) {\n    let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"info\";\n    infoDispatch({\n      type: \"SET\",\n      payload: {\n        message,\n        type\n      }\n    });\n    console.log(info);\n    setTimeout(() => {\n      infoDispatch({\n        type: \"CLEAR\"\n      });\n    }, 500);\n  };\n  const newBlogMutation = useMutation(blogService.create, {\n    onSuccess: newBlog => {\n      const blogs = queryClient.getQueryData(\"blogs\");\n      queryClient.setQueryData(\"blogs\", blogs.concat(newBlog));\n    },\n    onError: () => {\n      notifyWith(\"Error: Bad Request\", \"error\");\n    }\n  });\n  const likeBlogMutation = useMutation(blogService.update, {\n    onSuccess: updatedBlog => {\n      const blogs = queryClient.getQueryData(\"blogs\");\n      const updatedBlogs = blogs.map(b => b.id === updatedBlog.id ? updatedBlog : b);\n      queryClient.setQueryData(\"blogs\", updatedBlogs);\n    },\n    onError: () => {\n      notifyWith(\"Error: Bad Request\", \"error\");\n    }\n  });\n  const removeBlogMutation = useMutation(blogService.remove, {\n    onSuccess: id => {\n      const blogs = queryClient.getQueryData(\"blogs\");\n      queryClient.setQueryData(\"blogs\", blogs.filter(b => b.id !== id));\n    },\n    onError: () => {\n      notifyWith(\"Error: Bad Request\", \"error\");\n    }\n  });\n  const result = useQuery(\"blogs\", blogService.getAll);\n  if (result.isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }, this);\n  }\n  if (result.isError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"blog service not available due to problems in server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 12\n    }, this);\n  }\n  const blogs = result.data;\n  const login = async (username, password) => {\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      userDispatch({\n        type: \"SET\",\n        payload: user\n      });\n      storageService.saveUser(user);\n      notifyWith(\"welcome!\");\n    } catch (e) {\n      notifyWith(\"wrong username or password\", \"error\");\n    }\n  };\n  const logout = async () => {\n    userDispatch({\n      type: \"SET\",\n      payload: null\n    });\n    storageService.removeUser();\n    notifyWith(\"logged out\");\n  };\n  const createBlog = async newBlog => {\n    newBlogMutation.mutate(newBlog);\n    notifyWith(`A new blog '${newBlog.title}' by '${newBlog.author}' added`);\n    blogFormRef.current.toggleVisibility();\n  };\n  const like = async blog => {\n    const blogToUpdate = {\n      ...blog,\n      likes: blog.likes + 1,\n      user: blog.user.id\n    };\n    likeBlogMutation.mutate(blogToUpdate);\n    notifyWith(`A like for the blog '${blog.title}' by '${blog.author}'`);\n  };\n  const remove = async blog => {\n    const ok = window.confirm(`Sure you want to remove '${blog.title}' by ${blog.author}`);\n    if (ok) {\n      removeBlogMutation.mutate(blog.id);\n      notifyWith(`The blog' ${blog.title}' by '${blog.author} removed`);\n    }\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: [user, userDispatch],\n      children: /*#__PURE__*/_jsxDEV(InfoContext.Provider, {\n        value: [info, infoDispatch],\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"log in to application\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n            login: login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this);\n  }\n  const byLikes = (b1, b2) => b2.likes - b1.likes;\n  return /*#__PURE__*/_jsxDEV(InfoContext.Provider, {\n    value: [info, infoDispatch],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [user.username, \" logged in\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logout,\n          children: \"logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n        buttonLabel: \"new note\",\n        ref: blogFormRef,\n        children: /*#__PURE__*/_jsxDEV(NewBlog, {\n          createBlog: createBlog\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: blogs.sort(byLikes).map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n          blog: blog,\n          like: () => like(blog),\n          canRemove: user && blog.user.username === user.username,\n          remove: () => remove(blog)\n        }, blog.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"H0f1yru9ZgwPKuuabsXYoA7N1MY=\", false, function () {\n  return [useQueryClient, useMutation, useMutation, useMutation, useQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","useReducer","useQuery","useQueryClient","useMutation","InfoContext","UserContext","blogService","loginService","storageService","Blog","LoginForm","NewBlog","Notification","Togglable","jsxDEV","_jsxDEV","infoReducer","state","action","type","payload","message","userReducer","App","_s","user","userDispatch","info","infoDispatch","queryClient","blogFormRef","loadUser","notifyWith","arguments","length","undefined","console","log","setTimeout","newBlogMutation","create","onSuccess","newBlog","blogs","getQueryData","setQueryData","concat","onError","likeBlogMutation","update","updatedBlog","updatedBlogs","map","b","id","removeBlogMutation","remove","filter","result","getAll","isLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","isError","data","login","username","password","saveUser","e","logout","removeUser","createBlog","mutate","title","author","current","toggleVisibility","like","blog","blogToUpdate","likes","ok","window","confirm","Provider","value","byLikes","b1","b2","onClick","buttonLabel","ref","sort","canRemove","_c","$RefreshReg$"],"sources":["C:/Users/kevin/Documents/fullstackopen/fullstackopen-exercises/part7/blogapp-query/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef, useReducer } from \"react\";\nimport { useQuery, useQueryClient, useMutation } from \"react-query\";\n\nimport InfoContext from \"./InfoContext\";\nimport UserContext from \"./UserContext\";\n\nimport blogService from \"./services/blogs\";\nimport loginService from \"./services/login\";\nimport storageService from \"./services/storage\";\n\nimport Blog from \"./components/Blog\";\nimport LoginForm from \"./components/Login\";\nimport NewBlog from \"./components/NewBlog\";\nimport Notification from \"./components/Notification\";\nimport Togglable from \"./components/Togglable\";\n\nconst infoReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET\":\n      return action.payload;\n    case \"CLEAR\":\n      return { message: null };\n    default:\n      return state;\n  }\n};\n\nconst userReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  const [user, userDispatch] = useReducer(userReducer, \"\");\n  const [info, infoDispatch] = useReducer(infoReducer, { message: null });\n\n  const queryClient = useQueryClient();\n\n  const blogFormRef = useRef();\n\n  useEffect(() => {\n    const user = storageService.loadUser();\n    userDispatch({ type: \"SET\", payload: user });\n  }, []);\n\n  const notifyWith = (message, type = \"info\") => {\n    infoDispatch({\n      type: \"SET\",\n      payload: {\n        message,\n        type,\n      },\n    });\n    console.log(info);\n    setTimeout(() => {\n      infoDispatch({ type: \"CLEAR\" });\n    }, 500);\n  };\n\n  const newBlogMutation = useMutation(blogService.create, {\n    onSuccess: (newBlog) => {\n      const blogs = queryClient.getQueryData(\"blogs\");\n      queryClient.setQueryData(\"blogs\", blogs.concat(newBlog));\n    },\n    onError: () => {\n      notifyWith(\"Error: Bad Request\", \"error\");\n    },\n  });\n\n  const likeBlogMutation = useMutation(blogService.update, {\n    onSuccess: (updatedBlog) => {\n      const blogs = queryClient.getQueryData(\"blogs\");\n      const updatedBlogs = blogs.map((b) =>\n        b.id === updatedBlog.id ? updatedBlog : b\n      );\n      queryClient.setQueryData(\"blogs\", updatedBlogs);\n    },\n    onError: () => {\n      notifyWith(\"Error: Bad Request\", \"error\");\n    },\n  });\n\n  const removeBlogMutation = useMutation(blogService.remove, {\n    onSuccess: (id) => {\n      const blogs = queryClient.getQueryData(\"blogs\");\n      queryClient.setQueryData(\n        \"blogs\",\n        blogs.filter((b) => b.id !== id)\n      );\n    },\n    onError: () => {\n      notifyWith(\"Error: Bad Request\", \"error\");\n    },\n  });\n\n  const result = useQuery(\"blogs\", blogService.getAll);\n\n  if (result.isLoading) {\n    return <div>loading data...</div>;\n  }\n\n  if (result.isError) {\n    return <div>blog service not available due to problems in server</div>;\n  }\n\n  const blogs = result.data;\n\n  const login = async (username, password) => {\n    try {\n      const user = await loginService.login({ username, password });\n      userDispatch({ type: \"SET\", payload: user });\n      storageService.saveUser(user);\n      notifyWith(\"welcome!\");\n    } catch (e) {\n      notifyWith(\"wrong username or password\", \"error\");\n    }\n  };\n\n  const logout = async () => {\n    userDispatch({ type: \"SET\", payload: null });\n    storageService.removeUser();\n    notifyWith(\"logged out\");\n  };\n\n  const createBlog = async (newBlog) => {\n    newBlogMutation.mutate(newBlog);\n    notifyWith(`A new blog '${newBlog.title}' by '${newBlog.author}' added`);\n    blogFormRef.current.toggleVisibility();\n  };\n\n  const like = async (blog) => {\n    const blogToUpdate = { ...blog, likes: blog.likes + 1, user: blog.user.id };\n    likeBlogMutation.mutate(blogToUpdate);\n    notifyWith(`A like for the blog '${blog.title}' by '${blog.author}'`);\n  };\n\n  const remove = async (blog) => {\n    const ok = window.confirm(\n      `Sure you want to remove '${blog.title}' by ${blog.author}`\n    );\n    if (ok) {\n      removeBlogMutation.mutate(blog.id);\n      notifyWith(`The blog' ${blog.title}' by '${blog.author} removed`);\n    }\n  };\n\n  if (!user) {\n    return (\n      <UserContext.Provider value={[user, userDispatch]}>\n        <InfoContext.Provider value={[info, infoDispatch]}>\n          <div>\n            <h2>log in to application</h2>\n            <Notification />\n            <LoginForm login={login} />\n          </div>\n        </InfoContext.Provider>\n      </UserContext.Provider>\n    );\n  }\n\n  const byLikes = (b1, b2) => b2.likes - b1.likes;\n\n  return (\n    <InfoContext.Provider value={[info, infoDispatch]}>\n      <div>\n        <h2>blogs</h2>\n        <Notification />\n        <div>\n          {user.username} logged in\n          <button onClick={logout}>logout</button>\n        </div>\n        <Togglable buttonLabel=\"new note\" ref={blogFormRef}>\n          <NewBlog createBlog={createBlog} />\n        </Togglable>\n        <div>\n          {blogs.sort(byLikes).map((blog) => (\n            <Blog\n              key={blog.id}\n              blog={blog}\n              like={() => like(blog)}\n              canRemove={user && blog.user.username === user.username}\n              remove={() => remove(blog)}\n            />\n          ))}\n        </div>\n      </div>\n    </InfoContext.Provider>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}