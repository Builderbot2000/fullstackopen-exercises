{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Documents\\\\fullstackopen\\\\fullstackopen-exercises\\\\part7\\\\blogapp\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport Blog from \"./components/Blog\";\nimport blogService from \"./services/blogs\";\nimport loginService from \"./services/login\";\nimport storageService from \"./services/storage\";\nimport { setNotification } from \"./reducers/notificationReducer\";\nimport { initializeBlogs, addBlog } from \"./reducers/blogsReducer\";\nimport { useDispatch } from \"react-redux\";\nimport LoginForm from \"./components/Login\";\nimport NewBlog from \"./components/NewBlog\";\nimport Notification from \"./components/Notification\";\nimport Togglable from \"./components/Togglable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // const [blogs, setBlogs] = useState([]);\n  const [user, setUser] = useState(\"\");\n  const blogFormRef = useRef();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const user = storageService.loadUser();\n    setUser(user);\n  }, []);\n  useEffect(() => {\n    // blogService.getAll().then((blogs) => setBlogs(blogs));\n    dispatch(initializeBlogs());\n  }, [blogs]);\n  const notifyWith = function (message) {\n    let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"info\";\n    console.log(\"notifying with: \", message, \", \", type);\n    dispatch(setNotification(message, type, 500));\n  };\n  const login = async (username, password) => {\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      setUser(user);\n      storageService.saveUser(user);\n      notifyWith(\"welcome!\");\n    } catch (e) {\n      notifyWith(\"wrong username or password\", \"error\");\n    }\n  };\n  const logout = async () => {\n    setUser(null);\n    storageService.removeUser();\n    notifyWith(\"logged out\");\n  };\n  const createBlog = async newBlog => {\n    // const createdBlog = await blogService.create(newBlog);\n    notifyWith(`A new blog '${newBlog.title}' by '${newBlog.author}' added`);\n    // setBlogs(blogs.concat(createdBlog));\n    dispatch(addBlog(newBlog));\n    blogFormRef.current.toggleVisibility();\n  };\n  const like = async blog => {\n    const blogToUpdate = {\n      ...blog,\n      likes: blog.likes + 1,\n      user: blog.user.id\n    };\n    const updatedBlog = await blogService.update(blogToUpdate);\n    notifyWith(`A like for the blog '${blog.title}' by '${blog.author}'`);\n    setBlogs(blogs.map(b => b.id === blog.id ? updatedBlog : b));\n  };\n  const remove = async blog => {\n    const ok = window.confirm(`Sure you want to remove '${blog.title}' by ${blog.author}`);\n    if (ok) {\n      await blogService.remove(blog.id);\n      notifyWith(`The blog' ${blog.title}' by '${blog.author} removed`);\n      setBlogs(blogs.filter(b => b.id !== blog.id));\n    }\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"log in to application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n        login: login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n  const byLikes = (b1, b2) => b2.likes - b1.likes;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user.username, \" logged in\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"new note\",\n      ref: blogFormRef,\n      children: /*#__PURE__*/_jsxDEV(NewBlog, {\n        createBlog: createBlog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: blogs.sort(byLikes).map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n        blog: blog,\n        like: () => like(blog),\n        canRemove: user && blog.user.username === user.username,\n        remove: () => remove(blog)\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bv9NSxUlV3tv3K0iNbqux1vDJFg=\", false, function () {\n  return [useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","Blog","blogService","loginService","storageService","setNotification","initializeBlogs","addBlog","useDispatch","LoginForm","NewBlog","Notification","Togglable","jsxDEV","_jsxDEV","App","_s","user","setUser","blogFormRef","dispatch","loadUser","blogs","notifyWith","message","type","arguments","length","undefined","console","log","login","username","password","saveUser","e","logout","removeUser","createBlog","newBlog","title","author","current","toggleVisibility","like","blog","blogToUpdate","likes","id","updatedBlog","update","setBlogs","map","b","remove","ok","window","confirm","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","byLikes","b1","b2","onClick","buttonLabel","ref","sort","canRemove","_c","$RefreshReg$"],"sources":["C:/Users/kevin/Documents/fullstackopen/fullstackopen-exercises/part7/blogapp/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport Blog from \"./components/Blog\";\nimport blogService from \"./services/blogs\";\nimport loginService from \"./services/login\";\nimport storageService from \"./services/storage\";\nimport { setNotification } from \"./reducers/notificationReducer\";\nimport { initializeBlogs, addBlog } from \"./reducers/blogsReducer\";\nimport { useDispatch } from \"react-redux\";\n\nimport LoginForm from \"./components/Login\";\nimport NewBlog from \"./components/NewBlog\";\nimport Notification from \"./components/Notification\";\nimport Togglable from \"./components/Togglable\";\n\nconst App = () => {\n  // const [blogs, setBlogs] = useState([]);\n  const [user, setUser] = useState(\"\");\n\n  const blogFormRef = useRef();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const user = storageService.loadUser();\n    setUser(user);\n  }, []);\n\n  useEffect(() => {\n    // blogService.getAll().then((blogs) => setBlogs(blogs));\n    dispatch(initializeBlogs());\n  }, [blogs]);\n\n  const notifyWith = (message, type = \"info\") => {\n    console.log(\"notifying with: \", message, \", \", type);\n    dispatch(setNotification(message, type, 500));\n  };\n\n  const login = async (username, password) => {\n    try {\n      const user = await loginService.login({ username, password });\n      setUser(user);\n      storageService.saveUser(user);\n      notifyWith(\"welcome!\");\n    } catch (e) {\n      notifyWith(\"wrong username or password\", \"error\");\n    }\n  };\n\n  const logout = async () => {\n    setUser(null);\n    storageService.removeUser();\n    notifyWith(\"logged out\");\n  };\n\n  const createBlog = async (newBlog) => {\n    // const createdBlog = await blogService.create(newBlog);\n    notifyWith(`A new blog '${newBlog.title}' by '${newBlog.author}' added`);\n    // setBlogs(blogs.concat(createdBlog));\n    dispatch(addBlog(newBlog));\n    blogFormRef.current.toggleVisibility();\n  };\n\n  const like = async (blog) => {\n    const blogToUpdate = { ...blog, likes: blog.likes + 1, user: blog.user.id };\n    const updatedBlog = await blogService.update(blogToUpdate);\n    notifyWith(`A like for the blog '${blog.title}' by '${blog.author}'`);\n    setBlogs(blogs.map((b) => (b.id === blog.id ? updatedBlog : b)));\n  };\n\n  const remove = async (blog) => {\n    const ok = window.confirm(\n      `Sure you want to remove '${blog.title}' by ${blog.author}`\n    );\n    if (ok) {\n      await blogService.remove(blog.id);\n      notifyWith(`The blog' ${blog.title}' by '${blog.author} removed`);\n      setBlogs(blogs.filter((b) => b.id !== blog.id));\n    }\n  };\n\n  if (!user) {\n    return (\n      <div>\n        <h2>log in to application</h2>\n        <Notification />\n        <LoginForm login={login} />\n      </div>\n    );\n  }\n\n  const byLikes = (b1, b2) => b2.likes - b1.likes;\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <Notification />\n      <div>\n        {user.username} logged in\n        <button onClick={logout}>logout</button>\n      </div>\n      <Togglable buttonLabel=\"new note\" ref={blogFormRef}>\n        <NewBlog createBlog={createBlog} />\n      </Togglable>\n      <div>\n        {blogs.sort(byLikes).map((blog) => (\n          <Blog\n            key={blog.id}\n            blog={blog}\n            like={() => like(blog)}\n            canRemove={user && blog.user.username === user.username}\n            remove={() => remove(blog)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}