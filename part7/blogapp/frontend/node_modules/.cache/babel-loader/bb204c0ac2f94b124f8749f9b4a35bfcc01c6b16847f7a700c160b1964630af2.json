{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport blogs from \"../services/blogs\";\nconst blogsSlice = createSlice({\n  name: \"blogs\",\n  initialState: [],\n  reducers: {\n    setBlogs(state, action) {\n      return action.payload;\n    },\n    appendBlog(state, action) {\n      state.push(action.payload);\n    },\n    likeBlog(state, action) {\n      const targetId = action.payload.id;\n      state.find(blog => blog.id === targetId);\n    },\n    deleteBlog(state, action) {}\n  }\n});\nexport const {\n  setBlogs,\n  appendBlog\n} = blogsSlice.actions;\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const initialBlogs = await blogs.getAll();\n    dispatch(setBlogs(initialBlogs));\n  };\n};\nexport const addBlog = blog => {\n  return async dispatch => {\n    const newBlog = await blogs.create(blog);\n    dispatch(appendBlog(newBlog));\n  };\n};\nexport default blogsSlice.reducer;","map":{"version":3,"names":["createSlice","blogs","blogsSlice","name","initialState","reducers","setBlogs","state","action","payload","appendBlog","push","likeBlog","targetId","id","find","blog","deleteBlog","actions","initializeBlogs","dispatch","initialBlogs","getAll","addBlog","newBlog","create","reducer"],"sources":["C:/Users/kevin/Documents/fullstackopen/fullstackopen-exercises/part7/blogapp/frontend/src/reducers/blogsReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport blogs from \"../services/blogs\";\r\n\r\nconst blogsSlice = createSlice({\r\n  name: \"blogs\",\r\n  initialState: [],\r\n  reducers: {\r\n    setBlogs(state, action) {\r\n      return action.payload;\r\n    },\r\n    appendBlog(state, action) {\r\n      state.push(action.payload);\r\n    },\r\n    likeBlog(state, action) {\r\n      const targetId = action.payload.id;\r\n      state.find((blog) => blog.id === targetId);\r\n    },\r\n    deleteBlog(state, action) {},\r\n  },\r\n});\r\n\r\nexport const { setBlogs, appendBlog } = blogsSlice.actions;\r\n\r\nexport const initializeBlogs = () => {\r\n  return async (dispatch) => {\r\n    const initialBlogs = await blogs.getAll();\r\n    dispatch(setBlogs(initialBlogs));\r\n  };\r\n};\r\n\r\nexport const addBlog = (blog) => {\r\n  return async (dispatch) => {\r\n    const newBlog = await blogs.create(blog);\r\n    dispatch(appendBlog(newBlog));\r\n  };\r\n};\r\n\r\nexport default blogsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,mBAAmB;AAErC,MAAMC,UAAU,GAAGF,WAAW,CAAC;EAC7BG,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,QAAQA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACtB,OAAOA,MAAM,CAACC,OAAO;IACvB,CAAC;IACDC,UAAUA,CAACH,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACI,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IAC5B,CAAC;IACDG,QAAQA,CAACL,KAAK,EAAEC,MAAM,EAAE;MACtB,MAAMK,QAAQ,GAAGL,MAAM,CAACC,OAAO,CAACK,EAAE;MAClCP,KAAK,CAACQ,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKD,QAAQ,CAAC;IAC5C,CAAC;IACDI,UAAUA,CAACV,KAAK,EAAEC,MAAM,EAAE,CAAC;EAC7B;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEF,QAAQ;EAAEI;AAAW,CAAC,GAAGR,UAAU,CAACgB,OAAO;AAE1D,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,YAAY,GAAG,MAAMpB,KAAK,CAACqB,MAAM,CAAC,CAAC;IACzCF,QAAQ,CAACd,QAAQ,CAACe,YAAY,CAAC,CAAC;EAClC,CAAC;AACH,CAAC;AAED,OAAO,MAAME,OAAO,GAAIP,IAAI,IAAK;EAC/B,OAAO,MAAOI,QAAQ,IAAK;IACzB,MAAMI,OAAO,GAAG,MAAMvB,KAAK,CAACwB,MAAM,CAACT,IAAI,CAAC;IACxCI,QAAQ,CAACV,UAAU,CAACc,OAAO,CAAC,CAAC;EAC/B,CAAC;AACH,CAAC;AAED,eAAetB,UAAU,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}