{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport login from \"../services/login\";\nimport storage from \"../services/storage\";\nimport user from \"../services/user\";\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: null,\n  reducers: {\n    setUser(state, action) {\n      return action.payload;\n    }\n  }\n});\nexport const {\n  loginToUser,\n  logoutFromUser,\n  setUser\n} = userSlice.actions;\nexport const loginUser = (username, password) => {\n  return async dispatch => {\n    try {\n      const user = await login.login({\n        username,\n        password\n      });\n      console.log(\"Login Result: \", user);\n      dispatch(setUser(user));\n      storage.saveUser(user);\n    } catch (e) {\n      console.log(\"Login Failed!\");\n      throw new Error(\"wrong username or password\");\n    }\n  };\n};\nexport const logoutUser = () => {\n  return async dispatch => {\n    dispatch(setUser(null));\n    storage.removeUser();\n  };\n};\nexport const loadUser = () => {\n  return async dispatch => {\n    const user = storage.loadUser();\n    dispatch(setUser(user));\n  };\n};\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","login","storage","user","userSlice","name","initialState","reducers","setUser","state","action","payload","loginToUser","logoutFromUser","actions","loginUser","username","password","dispatch","console","log","saveUser","e","Error","logoutUser","removeUser","loadUser","reducer"],"sources":["C:/Users/kevin/Documents/fullstackopen/fullstackopen-exercises/part7/blogapp/frontend/src/reducers/userReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport login from \"../services/login\";\r\nimport storage from \"../services/storage\";\r\nimport user from \"../services/user\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: null,\r\n  reducers: {\r\n    setUser(state, action) {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { loginToUser, logoutFromUser, setUser } = userSlice.actions;\r\n\r\nexport const loginUser = (username, password) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const user = await login.login({ username, password });\r\n      console.log(\"Login Result: \", user);\r\n      dispatch(setUser(user));\r\n      storage.saveUser(user);\r\n    } catch (e) {\r\n      console.log(\"Login Failed!\");\r\n      throw new Error(\"wrong username or password\");\r\n    }\r\n  };\r\n};\r\n\r\nexport const logoutUser = () => {\r\n  return async (dispatch) => {\r\n    dispatch(setUser(null));\r\n    storage.removeUser();\r\n  };\r\n};\r\n\r\nexport const loadUser = () => {\r\n  return async (dispatch) => {\r\n    const user = storage.loadUser();\r\n    dispatch(setUser(user));\r\n  };\r\n};\r\n\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,IAAI,MAAM,kBAAkB;AAEnC,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,IAAI;EAClBC,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrB,OAAOA,MAAM,CAACC,OAAO;IACvB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC,WAAW;EAAEC,cAAc;EAAEL;AAAQ,CAAC,GAAGJ,SAAS,CAACU,OAAO;AAEzE,OAAO,MAAMC,SAAS,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EAC/C,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMf,IAAI,GAAG,MAAMF,KAAK,CAACA,KAAK,CAAC;QAAEe,QAAQ;QAAEC;MAAS,CAAC,CAAC;MACtDE,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEjB,IAAI,CAAC;MACnCe,QAAQ,CAACV,OAAO,CAACL,IAAI,CAAC,CAAC;MACvBD,OAAO,CAACmB,QAAQ,CAAClB,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOmB,CAAC,EAAE;MACVH,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B,MAAM,IAAIG,KAAK,CAAC,4BAA4B,CAAC;IAC/C;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC9B,OAAO,MAAON,QAAQ,IAAK;IACzBA,QAAQ,CAACV,OAAO,CAAC,IAAI,CAAC,CAAC;IACvBN,OAAO,CAACuB,UAAU,CAAC,CAAC;EACtB,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAC5B,OAAO,MAAOR,QAAQ,IAAK;IACzB,MAAMf,IAAI,GAAGD,OAAO,CAACwB,QAAQ,CAAC,CAAC;IAC/BR,QAAQ,CAACV,OAAO,CAACL,IAAI,CAAC,CAAC;EACzB,CAAC;AACH,CAAC;AAED,eAAeC,SAAS,CAACuB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}